name: Bootstrap All Automation

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Manos Agent workflow
        run: |
          mkdir -p .github/workflows
          cat > .github/workflows/manos-agent.yml <<'YAML'
          name: Manos Agent — Pull & Execute Ops
          on:
            workflow_dispatch:
            schedule:
              - cron: "*/15 * * * *"
          jobs:
            run_agent:
              runs-on: ubuntu-latest
              timeout-minutes: 30
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v4
                  with:
                    node-version: '20'
                - name: Install & Build VA Server
                  working-directory: apps/va-server
                  env:
                    NODE_ENV: production
                  run: |
                    npm ci
                    npm run build
                    nohup node dist/server.js > ../../va.log 2>&1 &
                - name: Wait for VA
                  run: |
                    for i in {1..40}; do
                      if curl -fsS http://127.0.0.1:8080/health >/dev/null; then
                        exit 0
                      fi
                      sleep 2
                    done
                    echo "VA did not start" && exit 1
                - name: Run Manos Agent
                  env:
                    SUPABASE_URL:              ${{ secrets.SUPABASE_URL }}
                    SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
                    SUPABASE_ANON_KEY:         ${{ secrets.SUPABASE_ANON_KEY }}
                    MANUS_API_URL:             ${{ secrets.MANUS_API_URL }}
                    MANOS_API_KEY:             ${{ secrets.MANOS_API_KEY }}
                    VA_SERVER_URL:             http://127.0.0.1:8080
                    POLL_INTERVAL:             "5000"
                  run: node manos-agent.mjs
          YAML

      - name: Create DB Ops workflow
        run: |
          cat > .github/workflows/db-ops.yml <<'YAML'
          name: DB Ops — Apply SQL
          on:
            workflow_dispatch:
            push:
              paths:
                - "tools/**/*.sql"
          jobs:
            apply_sql:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - name: Install psql
                  run: |
                    sudo apt-get update
                    sudo apt-get install -y postgresql-client
                - name: Apply initial_tasks.sql
                  if: ${{ hashFiles('tools/initial_tasks.sql') != '' }}
                  env:
                    DATABASE_URL: ${{ secrets.DATABASE_URL }}
                  run: psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f tools/initial_tasks.sql
                - name: Apply supabase_fixes.sql
                  if: ${{ hashFiles('tools/supabase_fixes.sql') != '' }}
                  env:
                    DATABASE_URL: ${{ secrets.DATABASE_URL }}
                  run: psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f tools/supabase_fixes.sql
          YAML

      - name: Create Smart Assistant Android CI
        run: |
          cat > ../smart-assistant-app/.github/workflows/android-ci.yml <<'YAML'
          name: Android CI — Smart Assistant
          on:
            workflow_dispatch:
            push:
              branches: [ "main" ]
          jobs:
            android-debug:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-java@v4
                  with:
                    distribution: temurin
                    java-version: "17"
                - uses: subosito/flutter-action@v2
                  with:
                    flutter-version: "3.22.0"
                    channel: "stable"
                    cache: true
                - run: flutter doctor -v
                - run: flutter pub get
                - name: Sanity patch gradle
                  run: |
                    sed -i 's/id("com.android.application") version ".*"/id("com.android.application") version "8.5.0"/' android/build.gradle.kts || true
                    sed -i 's/id("org.jetbrains.kotlin.android") version ".*"/id("org.jetbrains.kotlin.android") version "1.9.24"/' android/build.gradle.kts || true
                    sed -i 's/ package=\"[^\"]*\"//' android/app/src/main/AndroidManifest.xml || true
                - run: flutter build apk --debug
          YAML

      - name: Create Control Panel Android CI
        run: |
          mkdir -p ../control-panel-app/.github/workflows
          cat > ../control-panel-app/.github/workflows/android-ci.yml <<'YAML'
          name: Android CI — Control Panel
          on:
            workflow_dispatch:
            push:
              branches: [ "main" ]
          jobs:
            android-debug:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-java@v4
                  with:
                    distribution: temurin
                    java-version: "17"
                - uses: subosito/flutter-action@v2
                  with:
                    flutter-version: "3.22.0"
                    channel: "stable"
                    cache: true
                - run: flutter doctor -v
                - run: flutter pub get
                - name: Sanity patch gradle
                  run: |
                    sed -i 's/id("com.android.application") version ".*"/id("com.android.application") version "8.5.0"/' android/build.gradle.kts || true
                    sed -i 's/id("org.jetbrains.kotlin.android") version ".*"/id("org.jetbrains.kotlin.android") version "1.9.24"/' android/build.gradle.kts || true
                    sed -i 's/ package=\"[^\"]*\"//' android/app/src/main/AndroidManifest.xml || true
                - run: flutter build apk --debug
          YAML

      - name: Commit generated workflows
        run: |
          git config user.name  "automation-bot"
          git config user.email "automation@users.noreply.github.com"
          git add .github/workflows || true
          git add ../smart-assistant-app/.github/workflows || true
          git add ../control-panel-app/.github/workflows || true
          git commit -m "Bootstrap automation (agent, db ops, android CI)" || echo "Nothing to commit"
          git push
